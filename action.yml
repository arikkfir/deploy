name: Deploy
description: Deploy a repository to a given environment in the "delivery" repository.
branding:
  icon: bookmark
  color: blue
inputs:
  repository:
    description: The repository being deployed
    required: true
  branch:
    description: The branch being deployed in the source repository
    required: true
  token:
    description: GitHub token used to clone the "delivery" repository
    required: true
outputs:
  environment:
    description: |
      The name of the environment that was deployed to. This is a slugged version of the given branch, but with special
      characters replaced by dashes ("-") and is also restricted to 30 characters. In the case that the branch name is
      longer than 30 characters, the environment name will consist of the first 20 characters, followed by a dash ("-"),
      followed by the last 10 characters.
    value: ${{ steps.slug.outputs.slug }}
runs:
  using: composite
  steps:
    - shell: bash
      env:
        REPOSITORY: ${{ inputs.repository }}
        BRANCH: ${{ inputs.branch }}
        TOKEN: ${{ inputs.token }}
      run: |
        [[ -z "${REPOSITORY}" ]] && echo "Missing repository input" && exit 1 
        [[ -z "${BRANCH}" ]] && echo "Missing branch input" && exit 1
        [[ -z "${TOKEN}" ]] && echo "Missing token input" && exit 1
        echo "Required fields are present"
    - id: slug
      shell: bash
      env:
        BRANCH: ${{ inputs.branch }}
      run: |
        # Slug the branch name
        SLUG=$(echo -n "${BRANCH}" | sed -E 's/[^a-zA-Z0-9]+/-/g' | sed -E 's/^-|-$//g' | tr '[:upper:]' '[:lower:]')
        
        # Remove any leading dashes (start with a character)
        while [[ "${SLUG:0:1}" == "-" ]]; do
            SLUG="${SLUG:1}"
        done
        
        # Remove any trailing dashes (end with a character)
        while [[ "${SLUG: -1}" == "-" ]]; do
            SLUG="${SLUG%-}"
        done
        
        # If slug is empty, replace value with a random string
        if [[ -z "${SLUG}" ]]; then
          SLUG="empty-name-$(echo -n $RANDOM | base64 | head -c 20 | sed -E 's/[^a-zA-Z0-9]+/-/g')"
        fi
        
        # If slug is longer than 30 character, take the first 20 and last 10 characters
        if ((${#SLUG} > 30)); then
          PREFIX="${SLUG:0:20}"
          SUFFIX="${SLUG: -10}"
          SLUG="${PREFIX}-${SUFFIX}"
        fi
        
        echo "slug=${SLUG}" >> "$GITHUB_OUTPUT"
    - uses: actions/checkout@v4
      with:
        path: _delivery
        repository: arikkfir/delivery
        token: ${{ inputs.token }}
    - id: deploy
      shell: bash
      env:
        REPOSITORY: ${{ inputs.repository }}
        BRANCH: ${{ inputs.branch }}
        ENVIRONMENT: ${{ steps.slug.outputs.slug }}
        ENVIRONMENT_KUSTOMIZATION_FILE: environments/${{ steps.slug.outputs.slug }}/kustomization.yaml
        ENVIRONMENT_TEMPLATE_FILE: etc/${{ steps.slug.outputs.slug }}/kustomization.yaml
      working-directory: _delivery
      run: |
        set -x
        
        if [[ ! -f "${ENVIRONMENT_KUSTOMIZATION_FILE}" ]]; then
          mkdir -pv "environments/${ENVIRONMENT}"
          envsubst < "${ENVIRONMENT_TEMPLATE_FILE}" > "${ENVIRONMENT_KUSTOMIZATION_FILE}"
        fi
        sleep 1
        
        # Create a patch file to replace the branch in the GitRepository object associated with the given repository
        cat > patches.yaml <<EOF
        - patch: |
            - op: replace
              path: /spec/ref/branch
              value: "${BRANCH}"
          target:
            group: source.toolkit.fluxcd.io
            version: v1
            kind: GitRepository
            name: "${REPOSITORY}"
        EOF
        sleep 1
        
        # Ensure this patch is included in the environment's kustomization file (but without duplicating it)
        yq e -i '.patches -= load("patches.yaml")' "${ENVIRONMENT_KUSTOMIZATION_FILE}"
        yq e -i '.patches += load("patches.yaml")' "${ENVIRONMENT_KUSTOMIZATION_FILE}"
        cat "${ENVIRONMENT_KUSTOMIZATION_FILE}"
        sleep 5
        
        yq e -i '.patches -= load("patches.yaml")' "${ENVIRONMENT_KUSTOMIZATION_FILE}"
        yq e -i '.patches += load("patches.yaml")' "${ENVIRONMENT_KUSTOMIZATION_FILE}"
        cat "${ENVIRONMENT_KUSTOMIZATION_FILE}"
        rm -fv patch.yaml
        sleep 1
